plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

group = 'net.kunmc.lab'
version = '1.2'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'felnull'
        url = 'https://maven.felnull.dev/'
    }
}
configurations {
    shadow
    compileOnly.extendsFrom(shadow)
    implementation.extendsFrom(shadow)
}
dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'

    shadow 'net.kunmc.lab:ikisugi-logger:1.3'
    // shadow 'dev.felnull:felnull-java-library:1.56'
    shadow 'com.atilika.kuromoji:kuromoji:0.9.0'
    shadow 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'

    shadow 'com.mariten:kanatools:1.3.0'

    //https://raw.githubusercontent.com/unicode-org/icu/main/icu4c/LICENSE
    shadow 'com.ibm.icu:icu4j:71.1'
}
shadowJar {
    classifier ''
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]
    relocate 'net.kunmc.lab.ikisugilogger', 'net.kunmc.lab.ivowel.include.net.kunmc.lab.ikisugilogger'
    // relocate 'dev.felnull', 'net.kunmc.lab.ivowel.include.dev.felnull'
    relocate 'com.atilika.kuromoji', 'net.kunmc.lab.ivowel.include.com.atilika.kuromoji'
    relocate 'com.mariten', 'net.kunmc.lab.ivowel.include.com.mariten'
    relocate 'com.ibm.icu', 'net.kunmc.lab.ivowel.include.com.ibm.icu'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
